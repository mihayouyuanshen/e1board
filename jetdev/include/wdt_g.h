/****************************************************************************/
/*	Description		:WATCHDOG監視ヘッダー									*/
/*--------------------------------------------------------------------------*/
/*	Author			:DHC Chen.H												*/
/*--------------------------------------------------------------------------*/
/*	Date			:2023/03/28												*/
/*--------------------------------------------------------------------------*/
/*	Module Name		:WDT													*/
/*--------------------------------------------------------------------------*/
/*	Note			:WATCHDOG監視プロセスヘッダ								*/
/*--------------------------------------------------------------------------*/
/*	Copyright		:(c) 2020 NICHICON CORPORATION							*/
/****************************************************************************/
#ifndef __WDT_G_H__
#define __WDT_G_H__
#include "lfw_g.h"
/*--------------------------------------------------------------------------*/
/*	マクロ定義																*/
/*--------------------------------------------------------------------------*/
/***********************************************************
* @def		WDT_PROC_TIMEOUT_CNT
* @brief	常駐プロセスタイムアウトカウント(秒)
************************************************************/
#define WDT_PROC_TIMEOUT_DEF	((ulong)60u)
#define WDT_OK					((slong)0)
#define WDT_ERROR				((slong)-1)
/*--------------------------------------------------------------------------*/
/*	公開型宣言、定義														*/
/*--------------------------------------------------------------------------*/
/***********************************************************
* @enum		WdtMsgId_t
* @brief	ファンクションID
************************************************************/
typedef enum {
	WDT_MSGID_WDT_START = 0,	/* WDT開始通知 */
	WDT_MSGID_WDT_RES,			/* WDT応答通知 */
	WDT_MSGID_TERM_REQ,			/* 終了要求 */
	WDT_MSGID_TERM_RES			/* 終了応答通知 */
} WdtMsgId_t;

/***********************************************************
* @enum		WdtTermType_t
* @brief	終了種別
************************************************************/
typedef enum {
	WDT_TERM_TYPE_NONE = 0,		/* 終了処理未実行 */
	WDT_TERM_TYPE_REBOOT,		/* リブート */
	WDT_TERM_TYPE_SHUTDOWN		/* 電源OFF */
} WdtTermType_t;

/***********************************************************
* @struct	WdtFncWdtRes_t
* @brief	WDT応答通知メッセージ構造
************************************************************/
typedef struct {
	LfwHead_t header;		/* メッセージヘッダ */
	uchar timeout;			/* タイムアウト時間 */
} WdtFncWdtRes_t;

/***********************************************************
* @struct	WdtFncTermReq_t
* @brief	終了要求メッセージ構造
************************************************************/
typedef struct {
	LfwHead_t header;	/* メッセージヘッダ */
	WdtTermType_t type;	/* 終了種別 */
} WdtFncTermReq_t;

/***********************************************************
* @struct	WdtFncTermRes_t
* @brief	終了応答通知メッセージ構造
************************************************************/
typedef struct {
	LfwHead_t header;	/* メッセージヘッダ */
	WdtTermType_t type;	/* 終了種別 */
} WdtFncTermRes_t;

/***********************************************************
* @enum		WdtEvtEnum_t
* @brief	イベントID
************************************************************/
typedef enum {
	WDT_EVT_WDT_REQ = 0,	/* WDT応答要求 */
	WDT_EVT_TERM_REQ		/* 終了要求 */
} WdtEvtEnum_t;

/***********************************************************
* @struct	WdtEvtWdtReq_t
* @brief	WDT応答要求メッセージ構造
************************************************************/
typedef struct _WdtEvtWdtReq_t{
	LfwHead_t header;	/* メッセージヘッダ */
} WdtEvtWdtReq_t;

/***********************************************************
* @struct	WdtEvtTermReq_t
* @brief	終了要求メッセージ構造
************************************************************/
typedef struct {
	LfwHead_t header;	/* メッセージヘッダ */
	WdtTermType_t type;	/* 終了種別 */
	ulong sport;		/* 要求元SPORT */
} WdtEvtTermReq_t;

/***********************************************************
* @union	WdtFncMsg_t
* @brief	ファンクションメッセージ共用体
************************************************************/
typedef union {
	LfwHead_t header;				/* メッセージヘッダ */
	WdtFncWdtRes_t fncWdtRes;		/* WDT応答通知メッセージ */
	WdtFncTermReq_t fncTermReq;		/* 終了要求メッセージ */
	WdtFncTermRes_t fncTermRes;		/* 終了応答通知メッセージ */
} WdtFncMsg_t;

/***********************************************************
* @union	WdtEvtUnion_t
* @brief	イベントメッセージ共用体
************************************************************/
typedef union {
	LfwHead_t header;				/* メッセージヘッダ */
	WdtEvtWdtReq_t evtWdtReq;		/* WDT応答要求メッセージ */
	WdtEvtTermReq_t evtTermReq;		/* 終了要求メッセージ */
} WdtEvtUnion_t;

/*--------------------------------------------------------------------------*/
/*	定数宣言、定義															*/
/*--------------------------------------------------------------------------*/


/*--------------------------------------------------------------------------*/
/*	変数宣言																*/
/*--------------------------------------------------------------------------*/


/*--------------------------------------------------------------------------*/
/*	プロトタイプ宣言														*/
/*--------------------------------------------------------------------------*/
#ifdef __cplusplus
extern "C" {
#endif

extern slong WDT_AsyncSendWdtRes(uchar timeout);
extern slong WDT_AsyncSendRebootReq(void);
extern slong WDT_AsyncSendShutdownReq(void);
extern slong WDT_AsyncSendTermRes(WdtTermType_t type);

#ifdef __cplusplus
}
#endif

#endif /*__WDT_G_H__*/