/****************************************************************************/
/*	Description		:INV・PV・BDC・J.B.転送ヘッダファイル					*/
/*--------------------------------------------------------------------------*/
/*	Author			:DHC.zhangs												*/
/*--------------------------------------------------------------------------*/
/*	Date			:2023/03/20												*/
/*--------------------------------------------------------------------------*/
/*	Module Name		:FW更新機能の機能名は、EOTAとす							*/
/*--------------------------------------------------------------------------*/
/*	Note			:														*/
/*--------------------------------------------------------------------------*/
/*	Copyright		:(c) 2023 DHC CORPORATION								*/
/****************************************************************************/
#ifndef	__EOTA_INV_H__
#define	__EOTA_INV_H__

#include "typedef.h"

/*--------------------------------------------------------------------------*/
/* マクロ定義																*/
/*--------------------------------------------------------------------------*/
#define EOTA_INV_SEND_END					((uchar)1)		/* INV転送完了	*/
#define EOTA_PV_SEND_END					((uchar)2)		/* PV転送完了	*/
#define EOTA_BDC_SEND_END					((uchar)4)		/* BDC転送完了	*/
#define EOTA_JB_SEND_END					((uchar)8)		/* J.B.転送完了	*/

/*--------------------------------------------------------------------------*/
/* 非公開型宣言、定義														*/
/*--------------------------------------------------------------------------*/
/* 更新中止 */
typedef enum _eota_update_con_flg_t
{
	EOTA_UPD_ING_CONFLG_OFF = 0,		/* 0:更新引き続き　OFF				*/
	EOTA_UPD_ING_CONFLG_ON,				/* 1:更新引き続き　ON				*/
} EOTA_UPDATE_CON_FLG_T;

/*--------------------------------------------------------------------------*/
/* 定数宣言、定義															*/
/*--------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------*/
/* 変数宣言、定義															*/
/*--------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------*/
/* プロトタイプ宣言															*/
/*--------------------------------------------------------------------------*/
/* タイマー起動 */
static void eota_TimeStart();
/* タイマー終了 */
static void eota_TimeEnd();
/* 前回のメッセージ送信 */
static void eota_SendInvBeforeMess();
/* メッセージ送信処理(FW 転送問い合わせ) */
static uchar eota_SendInvMessInq(uchar Tgt);
/* メッセージ送信処理(FW 転送開始) */
static uchar eota_SendInvMessStart(uchar  Tgt, uchar  BankNo);
/* メッセージ送信処理(FW 転送) */
static uchar eota_SendInvMessTran(ulong  DataNo,
									uchar  Tgt,
									uchar  BankNo,
									slong  Offset);
/* メッセージ送信処理(FW 転送完了) */
static uchar eota_SendInvMessEnd();
/* メッセージ送信処理(FW 転送終了) */
static uchar eota_SendInvMessStop();
/* メッセージ送信処理(Busy送信) */
static uchar eota_SendInvMessBusy();
/* FW 転送継続処理 */
static uchar eota_FWTranStateCon(EOTA_CMD11_RES_INFO_T * Message);
/* FW 転送終了処理 */
static uchar eota_FWTranStateEnd(EOTA_CMD11_RES_INFO_T * Message);



#endif	/* __EOTA_INV_H__ */
